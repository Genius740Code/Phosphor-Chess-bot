# mingw32-make -f MakeFile 

# Compiler and flags
CXX = g++
CXXFLAGS = -Wall -Wextra -O3 -std=c++17 -Icode/include -march=native
LDFLAGS = -Lcode/lib -lsfml-graphics -lsfml-window -lsfml-system -lopengl32 -lsfml-audio

# Release-specific flags
RELEASE_FLAGS = -DNDEBUG -fomit-frame-pointer -flto

# Debug-specific flags
DEBUG_FLAGS = -g -DDEBUG -O0

# Source files and objects
SRCDIR = src
SRCS = $(wildcard $(SRCDIR)/*.cpp)
OBJS = $(patsubst $(SRCDIR)/%.cpp,%.o,$(SRCS))
EXECUTABLE = main

# Check OS for command compatibility
ifeq ($(OS),Windows_NT)
    # Windows commands
    RM = del /Q
    RMDIR = rmdir /S /Q
    EXE_EXT = .exe
else
    # Linux/Mac commands
    RM = rm -f
    RMDIR = rm -rf
    EXE_EXT = 
endif

.PHONY: all clean debug release run profile benchmark

all: release

# Debug build with debugging symbols
debug: CXXFLAGS += $(DEBUG_FLAGS)
debug: clean $(EXECUTABLE)

# Release build with full optimization
release: CXXFLAGS += $(RELEASE_FLAGS)
release: clean $(EXECUTABLE)

# Profile-guided optimization (two-stage build)
profile:
	@echo "Building instrumented executable for profile generation..."
	$(CXX) $(CXXFLAGS) -fprofile-generate $(SRCS) -o $(EXECUTABLE)_profile$(EXE_EXT) $(LDFLAGS)
	@echo "Run the profile executable, then use 'make benchmark' to build optimized version."

# Build optimized using the profile data
benchmark: CXXFLAGS += $(RELEASE_FLAGS) -fprofile-use
benchmark: clean
	$(CXX) $(CXXFLAGS) $(SRCS) -o $(EXECUTABLE)$(EXE_EXT) $(LDFLAGS)
	@echo "Profile-optimized build complete: $(EXECUTABLE)"

%.o: $(SRCDIR)/%.cpp
	$(CXX) $(CXXFLAGS) -c $< -o $@

$(EXECUTABLE): $(OBJS)
	$(CXX) $^ -o $@$(EXE_EXT) $(LDFLAGS)
	@echo "Build complete: $@"
	@echo "Run with: ./$(EXECUTABLE)"

clean:
	$(RM) *.o $(EXECUTABLE)$(EXE_EXT) $(EXECUTABLE) $(EXECUTABLE)_profile$(EXE_EXT) $(EXECUTABLE)_profile

run: all
	./$(EXECUTABLE)$(EXE_EXT)

# Git checkpoint target
git-checkpoint:
	@echo "Saving workspace..."
	git init -q || true
	git add .
	git commit -m "Workspace saved"
	@echo "Workspace saved successfully!"


# # Make sure you're on the free-movmentv2 branch
#git checkout free-movmentv2

# Reset to the first commit of this branch
#git reset --hard $(git rev-list --max-parents=0 HEAD)